tags:
  - name: Imagens do Carrossel
    description: Gerenciamento das imagens do carrossel.

paths:
  /imagens-carrossel:
    get:
      summary: Obter todas as imagens do carrossel
      tags: [Imagens do Carrossel]
      description: Retorna uma lista de todas as imagens do carrossel. Este endpoint é público.
      responses:
        '200':
          description: Uma lista de imagens do carrossel.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: { type: string, example: success }
                  message: { type: string, example: Success }
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ImagemCarrossel'
    post:
      summary: Criar uma nova imagem para o carrossel
      tags: [Imagens do Carrossel]
      security:
        - bearerAuth: []
      description: Adiciona uma nova imagem ao carrossel. Requer autenticação.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImagemCarrosselPayload'
      responses:
        '201':
          description: Imagem criada com sucesso.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: { type: string, example: success }
                  message: { type: string, example: Imagem do carrossel criada com sucesso. }
                  data:
                    $ref: '#/components/schemas/ImagemCarrossel'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

  /imagens-carrossel/{id}:
    get:
      summary: Obter imagem do carrossel por ID
      tags: [Imagens do Carrossel]
      description: Retorna uma imagem específica do carrossel pelo seu ID. Este endpoint é público.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Dados da imagem.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: { type: string, example: success }
                  message: { type: string, example: Success }
                  data:
                    $ref: '#/components/schemas/ImagemCarrossel'
        '404':
          $ref: '#/components/responses/NotFound'

    patch:
      summary: Atualizar uma imagem do carrossel por ID
      tags: [Imagens do Carrossel]
      security:
        - bearerAuth: []
      description: Atualiza uma imagem existente do carrossel. Requer autenticação.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImagemCarrosselPayload'
      responses:
        '200':
          description: Imagem atualizada com sucesso.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: { type: string, example: success }
                  message: { type: string, example: Imagem do carrossel atualizada com sucesso. }
                  data:
                    $ref: '#/components/schemas/ImagemCarrossel'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

    delete:
      summary: Deletar uma imagem do carrossel por ID
      tags: [Imagens do Carrossel]
      security:
        - bearerAuth: []
      description: Deleta uma imagem do carrossel. Requer autenticação.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Imagem deletada com sucesso.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: { type: string, example: success }
                  message: { type: string, example: Imagem do carrossel deletada com sucesso. }
                  data:
                    type: object
                    nullable: true
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'